version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis-db
    restart: always
    volumes:
      - ./redis:/var/lib/redis
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 4G
    networks:
      - app-network
  
  mysql-db:
    image: mysql:latest
    restart: always
    volumes:
      - ./mysqldata:/var/lib/mysql
      - ./init-scripts:/docker-entrypoint-initdb.d/
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: 7292
    ports:
      - "3306:3306"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - app-network

  springboot-app-1:
    build:
      context: .
      dockerfile: ./SpringDockerfile2
    container_name: springboot-app-1
    ports:
      - "8081:8080"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - app-network

  springboot-app-2:
    build:
      context: .
      dockerfile: ./SpringDockerfile2
    container_name: springboot-app-2
    ports:
      - "8082:8080"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - app-network

  springboot-app-3:
    build:
      context: .
      dockerfile: ./SpringDockerfile2
    container_name: springboot-app-3
    ports:
      - "8083:8080"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - app-network
    
  springboot-app-4:
    build:
      context: .
      dockerfile: ./SpringDockerfile2
    container_name: springboot-app-4
    ports:
      - "8084:8080"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx-lb
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
